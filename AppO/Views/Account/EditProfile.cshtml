@model EditProfileViewModel

@{
    ViewData["Title"] = "Editar Perfil";
}

<div class="container mt-5">
    <h2 class="text-center text-white">@ViewData["Title"]</h2>

    <form asp-action="EditProfile" method="post" enctype="multipart/form-data">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="Username" class="form-label text-white">Nome de Usuário</label>
                <input type="text" class="form-control" id="Username" name="Username" value="@Model.Username" required />
            </div>
            <div class="col-md-6">
                <label for="Name" class="form-label text-white">Nome</label>
                <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" required />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="DateOfBirth" class="form-label text-white">Data de Nascimento</label>
                <input type="date" class="form-control" id="DateOfBirth" name="DateOfBirth" value="@Model.DateOfBirth?.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-6">
                <label for="Biography" class="form-label text-white">Biografia</label>
                <textarea class="form-control" id="Biography" name="Biography" rows="4">@Model.Biography</textarea>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-6" id="dragAreaUserImage">
                <label for="UserImage" class="form-label text-white">Imagem de Perfil</label>
                <div id="dropZoneUserImage" class="drop-zone">
                    <p>Arraste e solte ou clique para selecionar uma imagem.</p>
                    <input type="file" class="form-control" id="UserImage" name="UserImage" accept="image/*" style="display: none;" onchange="previewImage('UserImage', 'profilePreview')" />
                </div>
                <div class="mt-3">
                    <img id="profilePreview" class="img-fluid rounded-circle" src="@Model.UserImage != null ? 'data:image/jpeg;base64,' + Convert.ToBase64String(Model.UserImage) : '~/images/Defaults/Avatar Padrao.png'" alt="Imagem de Perfil" style="width: 150px; height: 150px; object-fit: cover;" />
                </div>
            </div>
            <div class="col-md-6" id="dragAreaBannerImage">
                <label for="BannerImage" class="form-label text-white">Imagem de Banner</label>
                <div id="dropZoneBannerImage" class="drop-zone">
                    <p>Arraste e solte ou clique para selecionar uma imagem.</p>
                    <input type="file" class="form-control" id="BannerImage" name="BannerImage" accept="image/*" style="display: none;" onchange="previewImage('BannerImage', 'bannerPreview')" />
                </div>
                <div class="mt-3">
                    <img id="bannerPreview" class="img-fluid" src="@Model.BannerImage != null ? 'data:image/jpeg;base64,' + Convert.ToBase64String(Model.BannerImage) : '~/images/Defaults/Banner Padrao.png'" alt="Imagem de Banner" style="height: 250px; object-fit: cover; width: 100%;" />
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-between mb-4">
            <a asp-controller="Account" asp-action="Perfil" class="btn btn-secondary">Voltar</a>
            <button type="submit" class="btn btn-success">Salvar</button>
        </div>
    </form>
</div>

<script>
    // Função para mostrar o preview das imagens
    function previewImage(inputId, previewId) {
        const inputElement = document.getElementById(inputId);
        const previewElement = document.getElementById(previewId);

        const file = inputElement.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                previewElement.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    }

    // Configura a funcionalidade de drag-and-drop
    function setupDragAndDrop(inputId, dropZoneId) {
        const inputElement = document.getElementById(inputId);
        const dropZoneElement = document.getElementById(dropZoneId);

        dropZoneElement.addEventListener("dragover", function (event) {
            event.preventDefault();
            dropZoneElement.classList.add("dragging");
        });

        dropZoneElement.addEventListener("drop", function (event) {
            event.preventDefault();
            dropZoneElement.classList.remove("dragging");
            const file = event.dataTransfer.files[0];
            if (file) {
                inputElement.files = event.dataTransfer.files;
                dropZoneElement.querySelector("p").textContent = `Arquivo selecionado: ${file.name}`;
                previewImage(inputId, dropZoneId === "dropZoneUserImage" ? "profilePreview" : "bannerPreview");
            }
        });

        dropZoneElement.addEventListener("dragleave", function () {
            dropZoneElement.classList.remove("dragging");
        });

        dropZoneElement.addEventListener("click", function () {
            inputElement.click();
        });

        inputElement.addEventListener("change", function () {
            const file = inputElement.files[0];
            if (file) {
                dropZoneElement.querySelector("p").textContent = `Arquivo selecionado: ${file.name}`;
                previewImage(inputId, dropZoneId === "dropZoneUserImage" ? "profilePreview" : "bannerPreview");
            }
        });
    }

    // Inicializando as áreas de drag-and-drop para imagens de perfil e banner
    setupDragAndDrop("UserImage", "dropZoneUserImage");
    setupDragAndDrop("BannerImage", "dropZoneBannerImage");
</script>

<style>
    .drop-zone {
        border: 2px dashed #ddd;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        background-color: #f7f7f7;
        transition: background-color 0.3s;
    }

        .drop-zone.dragging {
            background-color: #e0e0e0;
        }

        .drop-zone p {
            margin: 0;
            font-size: 14px;
            color: #777;
        }

    /* Responsividade */
    @@media (max-width: 768px) {
        .form-control, .drop-zone

    {
        font-size: 14px;
    }

    .row.mb-3 .col-md-6 {
        margin-bottom: 15px;
    }

    }

    /* Estilos gerais */
    .container {
        max-width: 800px;
        margin: 0 auto;
    }

    .btn-secondary, .btn-success {
        padding: 10px 20px;
    }

    .form-label {
        font-weight: bold;
    }

    .img-fluid {
        max-width: 100%;
    }
</style>
